{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "GoIt Task Pro REST API",
    "description": "API documentation for GoIT final-project-backend",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:4000" },
    { "url": "https://final-project-backend-hsxg.onrender.com" }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Board",
      "description": "Board endpoints"
    },
    {
      "name": "Card",
      "description": "Card endpoints"
    },
    {
      "name": "Column",
      "description": "Column endpoints"
    },
    {
      "name": "Theme",
      "description": "Theme endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Body must have at least one field)",
            "content": {}
          },
          "409": {
            "description": "Provided email already in use",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Body must have at least one field)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["User"],
        "summary": "Update current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update current user object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCurrentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Body must have at least one field)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/theme": {
      "patch": {
        "tags": ["Theme"],
        "summary": "Get current user theme",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateThemeSchema"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Theme"],
        "summary": "Update current user theme",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update current user theme object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Body must have at least one field)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": ["Board"],
        "summary": "Get all board's details",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Board"],
        "summary": "Create a new board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Board's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          }
        }
      }
    },
    "/boards/:boardId": {
      "post": {
        "tags": ["Board"],
        "summary": "Cards endpoint",
        "parameters": [{ "in": "path", "name": "boardId" }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Column's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          }
        }
      }
    },
    "delete": {
      "tags": ["Board"],
      "summary": "Columns endpoint",
      "parameters": [{ "in": "path", "name": "boardId" }],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "Successful operation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOneColumnsResponse"
              }
            }
          }
        },
        "401": {
          "description": "Bearer auth failed",
          "content": {}
        },
        "404": {
          "description": "Not found",
          "content": {}
        }
      }
    },
    "/columns/:boardId": {
      "get": {
        "tags": ["Column"],
        "summary": "Columns endpoint",
        "parameters": [{ "in": "path", "name": "boardId" }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Column's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getAllColumnsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllColumnsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Column"],
        "summary": "Columns endpoint",
        "parameters": [{ "in": "path", "name": "boardId" }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Column's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          }
        }
      }
    },
    "/columns/:columnId": {
      "put": {
        "tags": ["Column"],
        "summary": "Columns endpoint",
        "parameters": [{ "in": "path", "name": "columnId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Column's object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOneColumnReques"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Column"],
        "summary": "Columns endpoint",
        "parameters": [{ "in": "path", "name": "columnId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOneColumnsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/cards/": {
      "get": {
        "tags": ["Card"],
        "summary": "Card endpoint",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/cards/:columnId": {
      "post": {
        "tags": ["Card"],
        "summary": "Cards endpoint",
        "parameters": [{ "in": "path", "name": "columnId" }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Cards's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          }
        }
      }
    },
    "/cards/:cardId": {
      "put": {
        "tags": ["Card"],
        "summary": "Card endpoint",
        "parameters": [{ "in": "path", "name": "cardId" }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Card's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOneCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOneCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Card"],
        "summary": "Card endpoint",
        "parameters": [{ "in": "path", "name": "cardId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOneCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "user"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "user"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        },
        "example": {
          "_id": "123878319791",
          "name": "user",
          "email": "user@example.com"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "_id": {
              "type": "string",
              "description": "User's id",
              "example": "123878319791"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "user"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "light"
            },
            "avatarURL": {
              "type": "string",
              "description": "User's avatar",
              "example": "http://cloudinary/avatar"
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "71389ASDHJK137hajSKD"
          }
        },
        "example": {
          "user": {
            "_id": "123878319791",
            "name": "user",
            "email": "user@example.com",
            "theme": "light",
            "avatarURL": "http://default-avatar-url.com"
          },
          "token": "71389ASDHJK137hajSKD"
        }
      },
      "GetCurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "_id": {
              "type": "string",
              "description": "User's id",
              "example": "123878319791"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "user"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "light"
            },
            "avatarURL": {
              "type": "string",
              "description": "User's avatar",
              "example": "http://cloudinary/avatar"
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "71389ASDHJK137hajSKD"
          }
        },
        "example": {
          "user": {
            "_id": "123878319791",
            "name": "user",
            "email": "user@example.com",
            "theme": "light",
            "avatarURL": "http://default-avatar-url.com"
          },
          "token": "71389ASDHJK137hajSKD"
        }
      },
      "UpdateCurrentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "user"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Password123"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary"
          }
        },
        "example": {
          "name": "user",
          "email": "user@example.com",
          "password": "Password123",
          "avatarURL": "http://default-avatar-url.com"
        }
      },
      "UpdateCurrentResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "user"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "http://cloudinary/avatar"
          }
        },
        "example": {
          "_id": "123878319791",
          "name": "user",
          "email": "user@example.com",
          "avatarURL": "http://unique-avatar-url.com"
        }
      },
      "sendMailSchema": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Recipient email address",
            "example": "recipient@example.com"
          },
          "subject": {
            "type": "string",
            "description": "Email subject",
            "example": "Help Needed"
          },
          "message": {
            "type": "string",
            "description": "Email message",
            "example": "Please help me with..."
          }
        },
        "required": ["to", "subject", "message"]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Additional message",
            "example": "Email sent successfully"
          }
        }
      },
      "GetAllBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Board's id",
              "example": "12312789"
            },
            "title": {
              "type": "string",
              "description": "Board's title",
              "example": "Example column"
            },
            "icon": {
              "type": "string",
              "description": "Icon's name",
              "example": "#icon-hexagon"
            },
            "background": {
              "type": "string",
              "description": "Background's id",
              "example": "12837981271422"
            },
            "owner": {
              "type": "string",
              "description": "User's id",
              "example": "123878319791"
            }
          }
        },
        "example": [
          {
            "_id": "12312789",
            "title": "Example board",
            "icon": "#icon-hexagon",
            "background": "12837981271422",
            "owner": "123878319791"
          },
          {
            "_id": "12312789",
            "title": "Example 2 board",
            "icon": "#icon-hexagon",
            "background": "12837981271422",
            "owner": "123878319791"
          }
        ]
      },
      "CreateBoardRequest": {
        "type": "object",
        "required": ["title", "iconId", "background"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "New Board"
          },
          "icon": {
            "type": "number",
            "description": "Board's id",
            "example": "#icon-hexagon"
          },
          "background": {
            "type": "string",
            "description": "Board's background id",
            "example": "12837981271422"
          }
        },
        "example": {
          "title": "New Board",
          "icon": "#icon-hexagon",
          "background": "12837981271422"
        }
      },
      "CreateBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board's id",
            "example": "12312789"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Example column"
          },
          "icon": {
            "type": "String",
            "default": "#icon-hexagon",
            "enum": "options"
          },
          "background": {
            "type": "string",
            "description": "Board's background id",
            "example": "12837981271422"
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          }
        },
        "example": {
          "_id": "12312789",
          "title": "Example column",
          "icon": "#icon-hexagon",
          "background": "12837981271422",
          "owner": "123878319791"
        }
      },
      "getAllColumnsRequest": {
        "type": "object",
        "required": ["board"],
        "properties": {
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "71392878"
          }
        },
        "example": {
          "board": "1827381981"
        }
      },
      "GetAllColumnsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Column's id",
              "example": "12312789"
            },
            "title": {
              "type": "string",
              "description": "Columns's title",
              "example": "Example column"
            },
            "board": {
              "type": "string",
              "description": "Board's id",
              "example": "12837981271739"
            },
            "owner": {
              "type": "string",
              "description": "User's id",
              "example": "123878319791"
            }
          }
        },
        "example": [
          {
            "_id": "12312789",
            "title": "Example column",
            "board": "12837981271739",
            "owner": "123878319791"
          },
          {
            "_id": "12312782",
            "title": "Example 2 column",
            "board": "12837981271739",
            "owner": "123878319791"
          }
        ]
      },
      "CreateColumnRequest": {
        "type": "object",
        "required": ["title", "board"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "New Column"
          },
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "71392878"
          }
        },
        "example": {
          "title": "New column",
          "board": "1827381981"
        }
      },
      "CreateColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Column's id",
            "example": "12312789"
          },
          "title": {
            "type": "string",
            "description": "Columns's title",
            "example": "Example column"
          },
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          }
        },
        "example": {
          "_id": "12312789",
          "title": "Example column",
          "board": "12837981271739",
          "owner": "123878319791"
        }
      },
      "GetOneColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Column's id",
            "example": "12312789"
          },
          "title": {
            "type": "string",
            "description": "Columns's title",
            "example": "Example column"
          },
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          }
        },
        "example": {
          "_id": "12312789",
          "title": "Example column",
          "board": "12837981271739",
          "owner": "123878319791"
        }
      },
      "UpdateOneColumnRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "New Column"
          }
        },
        "example": {
          "title": "New column"
        }
      },
      "UpdateOneColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Column's id",
            "example": "12312789"
          },
          "title": {
            "type": "string",
            "description": "Columns's title",
            "example": "Example column"
          },
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          }
        },
        "example": {
          "_id": "12312789",
          "title": "Example column",
          "board": "12837981271739",
          "owner": "123878319791"
        }
      },
      "DeleteOneColumnsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Column deleted successfully"
          }
        },
        "example": {
          "message": "Column deleted successfully"
        }
      },
      "GetAllCardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Card's id",
              "example": "12312789"
            },
            "title": {
              "type": "string",
              "description": "Card's title",
              "example": "Example card"
            },
            "description": {
              "type": "string",
              "description": "Card's descripiton",
              "example": "Example description"
            },
            "priority": {
              "type": "string",
              "descripiton": "Card's priority",
              "example": "low"
            },
            "deadline": {
              "type": "string",
              "descripiton": "Card's deadline",
              "format": "date-time"
            },
            "board": {
              "type": "string",
              "description": "Board's id",
              "example": "12837981271739"
            },
            "column": {
              "type": "string",
              "description": "Column's id",
              "example": "12837981271731"
            },
            "owner": {
              "type": "string",
              "description": "User's id",
              "example": "123878319791"
            }
          }
        },
        "example": [
          {
            "_id": "12312789",
            "title": "Example card",
            "descripiton": "Example description",
            "priority": "low",
            "deadline": "2024-04-02T16:33:21.953Z",
            "board": "12837981271739",
            "column": "12837981271731",
            "owner": "123878319791"
          },
          {
            "_id": "123127891",
            "title": "Example 2 card",
            "descripiton": "Example description",
            "priority": "low",
            "deadline": "2024-04-02T16:33:21.953Z",
            "board": "12837981271739",
            "column": "12837981271731",
            "owner": "123878319791"
          }
        ]
      },
      "CreateCardRequest": {
        "type": "object",
        "required": [
          "title",
          "description",
          "priority",
          "deadline",
          "boardId",
          "columnId",
          "owner",
          "index"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Example card"
          },
          "description": {
            "type": "string",
            "description": "Card's descripiton",
            "example": "Example description"
          },
          "priority": {
            "type": "string",
            "descripiton": "Card's priority",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "descripiton": "Card's deadline",
            "format": "date-time"
          },
          "boardId": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "columnId": {
            "type": "string",
            "description": "Column's id",
            "example": "12837981271731"
          }
        },
        "example": {
          "title": "Example card",
          "description": "Example description",
          "priority": "low",
          "deadline": "2024-04-02T16:33:21.953Z",
          "boardId": "12837981271739",
          "columnId": "12837981271731"
        }
      },
      "CreateCardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Card's id",
            "example": "12312789"
          },
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Example card"
          },
          "description": {
            "type": "string",
            "description": "Card's descripiton",
            "example": "Example description"
          },
          "priority": {
            "type": "string",
            "descripiton": "Card's priority",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "descripiton": "Card's deadline",
            "format": "date-time"
          },
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "column": {
            "type": "string",
            "description": "Column's id",
            "example": "12837981271731"
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          }
        },
        "example": {
          "_id": "123127891",
          "title": "Example 2 card",
          "descripiton": "Example description",
          "priority": "low",
          "deadline": "2024-04-02T16:33:21.953Z",
          "board": "12837981271739",
          "column": "12837981271731",
          "owner": "123878319791"
        }
      },
      "GetOneCardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Card's id",
            "example": "12312789"
          },
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Example card"
          },
          "description": {
            "type": "string",
            "description": "Card's descripiton",
            "example": "Example description"
          },
          "priority": {
            "type": "string",
            "descripiton": "Card's priority",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "descripiton": "Card's deadline",
            "format": "date-time"
          },
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "column": {
            "type": "string",
            "description": "Column's id",
            "example": "12837981271731"
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          }
        },
        "example": {
          "_id": "123127891",
          "title": "Example 2 card",
          "descripiton": "Example description",
          "priority": "low",
          "deadline": "2024-04-02T16:33:21.953Z",
          "board": "12837981271739",
          "column": "12837981271731",
          "owner": "123878319791"
        }
      },
      "UpdateOneCardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Example card"
          },
          "description": {
            "type": "string",
            "description": "Card's descripiton",
            "example": "Example description"
          },
          "priority": {
            "type": "string",
            "descripiton": "Card's priority",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "descripiton": "Card's deadline",
            "format": "date-time"
          },
          "boardId": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "columnId": {
            "type": "string",
            "description": "Column's id",
            "example": "12837981271731"
          }
        },
        "example": {
          "title": "Example card",
          "descripiton": "Example description",
          "priority": "low",
          "deadline": "2024-04-02T16:33:21.953Z",
          "boardId": "12837981271739",
          "columnId": "12837981271731"
        }
      },
      "UpdateOneCardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Card's id",
            "example": "12312789"
          },
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Example card"
          },
          "description": {
            "type": "string",
            "description": "Card's descripiton",
            "example": "Example description"
          },
          "priority": {
            "type": "string",
            "descripiton": "Card's priority",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "descripiton": "Card's deadline",
            "format": "date-time"
          },
          "board": {
            "type": "string",
            "description": "Board's id",
            "example": "12837981271739"
          },
          "column": {
            "type": "string",
            "description": "Column's id",
            "example": "12837981271731"
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "123878319791"
          }
        },
        "example": {
          "_id": "123127891",
          "title": "Example 2 card",
          "descripiton": "Example description",
          "priority": "low",
          "deadline": "2024-04-02T16:33:21.953Z",
          "board": "12837981271739",
          "column": "12837981271731",
          "owner": "123878319791"
        }
      },
      "DeleteOneCardResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Card deleted successfully"
          }
        },
        "example": {
          "card": {
            "_id": "123127891",
            "title": "Example 2 card",
            "descripiton": "Example description",
            "priority": "low",
            "deadline": "2024-04-02T16:33:21.953Z",
            "board": "12837981271739",
            "column": "12837981271731",
            "owner": "123878319791"
          },
          "message": "Card deleted successfully"
        }
      }
    },
    "updateThemeSchema": {
      "type": "object",
      "properties": {
        "theme": {
          "type": "string",
          "enum": ["light", "violet", "dark"],
          "description": "Theme"
        }
      },
      "required": ["theme"]
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
